buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
        classpath 'io.fabric.tools:gradle:1.20.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'org.greenrobot.greendao'

repositories {
    maven { url 'https://github.com/donnfelker/mvn-repo/raw/master/' }
    mavenLocal()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    flatDir {
        dirs 'libs'
    }
}

def computeVersionCode() {

    if (System.env.BUILD_NUMBER) {              // Check if there is a system build number.
        return "$System.env.BUILD_NUMBER".toInteger()
    } else if (System.env.CIRCLE_BUILD_NUM) {   // Check to see if this is built on circle CI
        return "$System.env.CIRCLE_BUILD_NUM".toInteger()
    } else {
        return 1                                // if none is found, default to 1.
    }
}

def computeVersionName() {
    return "1." + computeVersionCode()
}

//noinspection GroovyUnusedAssignment
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()


android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 19

        versionCode computeVersionCode()
        versionName computeVersionName()

        // Enable this if you want to use Build.GIT_SHA in your code somewhere.
        // This will give you the last GIT_SHA that was committed
        // buildConfigField "String", "GIT_SHA", "\"${gitSha}\""

        manifestPlaceholders = [
                fabricCrashlyticsApiKey: crashlyticsApiKey   // Set this in your ~/.gradle/gradle.properties as: crashlyticsApiKey or use "$System.env.CRASHLYTICS_API_KEY"  to use a env variable (and then set that value, of course)
        ]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    packagingOptions {
        // Exclude file to avoid
        // Error: Duplicate files during packaging of APK
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

     signingConfigs {
         // Uncomment and set values and then this will work
//         debug {
//             storeFile file(ANDROID_KEYSTORE_PATH)
//             storePassword ANDROID_STORE_PASS
//             keyAlias ANDROID_KEY_ALIAS
//             keyPassword ANDROID_KEY_PASS
//         }
//         release {
//             storeFile file(ANDROID_KEYSTORE_PATH)
//             storePassword ANDROID_STORE_PASS
//             keyAlias ANDROID_KEY_ALIAS
//             keyPassword ANDROID_KEY_PASS
//         }
     }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
//            signingConfig signingConfigs.debug
            // zipAlign false // this is default for debug
        }
        release {
            minifyEnabled true
            proguardFile '../proguard.cfg'
//            signingConfig signingConfigs.release
            // zipAlign true // this is default for release
            // testPackageName 'com.zeonic.ykt.tests'
            // testInstrumentationRunner 'android.test.InstrumentationTestRunner' // this is the default
        }
    }
    // for baidu so
    sourceSets {
        main {
//            main.java.srcDirs += 'build/generated/source/greendao'
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    // Android Support Libs
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:percent:23.0.1'
    compile 'com.google.code.gson:gson:2.3'
    // Dependency Injection
    compile 'com.google.dagger:dagger:2.0'
    // View Injection
    compile 'com.jakewharton:butterknife:7.0.1'
    // Logging
    compile 'com.jakewharton.timber:timber:3.0.2'
    compile 'com.actionbarsherlock:viewpagerindicator:2.4.1'
    compile 'com.nineoldandroids:library:2.4.0'
    // Event Bus
    compile 'org.greenrobot:eventbus:3.0.0'
    // Image Loading
    compile 'com.squareup.picasso:picasso:1.1.1'
    //ZXing  QRCode lib
    compile 'com.google.zxing:core:3.3.0'
    // HTTP
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    //    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.5.0'
    // Retrofit XML converter (Simple)
    compile('com.squareup.retrofit:converter-simplexml:1.9.0') {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    // assert dao
    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:+'
    // orm
    compile 'org.greenrobot:greendao:3.2.2'
    // Fabric/Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.2.3@aar') {
        transitive = true
    }
    compile 'de.hdodenhof:circleimageview:2.1.0'
    // baidu map
    //    compile files('libs/BaiduLBS_Android.jar')
    compile fileTree(include: '*.jar', dir: 'libs')
    compile name: 'SMSSDK-2.1.3', ext: 'aar'
    compile name: 'SMSSDKGUI-2.1.3', ext: 'aar'
    // didi common _v1.1.0_02_15
    compile name: 'didi_sdk_common', ext: 'aar'
    // RX android
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'

    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.4'
    // Set this dependency to use JUnit 4 rules
    androidTestCompile 'com.android.support.test:rules:0.4'
    // Set this dependency to build and run Espresso tests
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    // Contrib
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        // http://stackoverflow.com/a/30931887/5210
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    // Set this dependency to build and run UI Automator tests
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'javax.annotation:jsr250-api:1.0'
    greendao {
        /**
         * 1,  create FavouritePositionPOIDao
         * 2,  create EventLaunchDao
         * 3,  create CampaignEventReadableEntity, eventId-isRead relation
         * 4,  create TransportationCard
         * 4.1 FavouritePositionPOI use temp field
         * 5,  add cityId column to TransportationCard
         * 6,  create ZeonicCity
         * 7,  create EventBellDao
         */
        schemaVersion 1
//    targetGenDir 'src/main/java/'
    }
}
